{
  "Resources": {
    "MyJenkinsClusterE10905AE": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsCluster/Resource"
      }
    },
    "MyJenkinsServiceLBFDD29EEF": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "MyJenkinsServiceLBSecurityGroup2558BA7F",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          "subnet-e44d6483",
          "subnet-52a2e31b",
          "subnet-eda46eb6",
          "subnet-2b33ff00"
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/LB/Resource"
      }
    },
    "MyJenkinsServiceLBSecurityGroup2558BA7F": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB EcsJenkinsFargateStackMyJenkinsServiceLBEE28E9FF",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": "vpc-7bd9c41c"
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/LB/SecurityGroup/Resource"
      }
    },
    "MyJenkinsServiceLBSecurityGrouptoEcsJenkinsFargateStackMyJenkinsServiceSecurityGroupB976CDCB8080D03DD439": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "MyJenkinsServiceLBSecurityGroup2558BA7F",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "MyJenkinsServiceSecurityGroup04C2C3C9",
            "GroupId"
          ]
        },
        "FromPort": 8080,
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/LB/SecurityGroup/to EcsJenkinsFargateStackMyJenkinsServiceSecurityGroupB976CDCB:8080"
      }
    },
    "MyJenkinsServiceLBPublicListener6610A6DC": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "MyJenkinsServiceLBPublicListenerECSGroupB94EC70C"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "MyJenkinsServiceLBFDD29EEF"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/LB/PublicListener/Resource"
      }
    },
    "MyJenkinsServiceLBPublicListenerECSGroupB94EC70C": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckIntervalSeconds": "30",
        "HealthCheckPath": "/login",
        "HealthCheckPort": "8080",
        "HealthyThresholdCount": "2",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": 15
          }
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": "5",
        "VpcId": "vpc-7bd9c41c"
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "MyJenkinsServiceTaskDefTaskRoleB87E23B0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/TaskDef/TaskRole/Resource"
      }
    },
    "MyJenkinsServiceTaskDefD591D293": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "JAVA_OPTS",
                "Value": "-Dhudson.DNSMultiCast.disabled=true"
              }
            ],
            "Essential": true,
            "Image": "mikeapted/jenkins-master:withconfig",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "MyJenkinsServiceTaskDefwebLogGroup50C29646"
                },
                "awslogs-stream-prefix": "MyJenkinsService",
                "awslogs-region": "us-west-2"
              }
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "MyJenkinsServiceTaskDefExecutionRole65E76853",
            "Arn"
          ]
        },
        "Family": "EcsJenkinsFargateStackMyJenkinsServiceTaskDefB7AB9309",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "MyJenkinsServiceTaskDefTaskRoleB87E23B0",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/TaskDef/Resource"
      }
    },
    "MyJenkinsServiceTaskDefwebLogGroup50C29646": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/TaskDef/web/LogGroup/Resource"
      }
    },
    "MyJenkinsServiceTaskDefExecutionRole65E76853": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/TaskDef/ExecutionRole/Resource"
      }
    },
    "MyJenkinsServiceTaskDefExecutionRoleDefaultPolicy5B6069A7": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "MyJenkinsServiceTaskDefwebLogGroup50C29646",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "MyJenkinsServiceTaskDefExecutionRoleDefaultPolicy5B6069A7",
        "Roles": [
          {
            "Ref": "MyJenkinsServiceTaskDefExecutionRole65E76853"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "MyJenkinsService47768937": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "TaskDefinition": {
          "Ref": "MyJenkinsServiceTaskDefD591D293"
        },
        "Cluster": {
          "Ref": "MyJenkinsClusterE10905AE"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "MyJenkinsServiceLBPublicListenerECSGroupB94EC70C"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "MyJenkinsServiceSecurityGroup04C2C3C9",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              "subnet-e44d6483",
              "subnet-52a2e31b",
              "subnet-eda46eb6",
              "subnet-2b33ff00"
            ]
          }
        }
      },
      "DependsOn": [
        "MyJenkinsServiceLBPublicListenerECSGroupB94EC70C",
        "MyJenkinsServiceLBPublicListener6610A6DC"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/Service/Service"
      }
    },
    "MyJenkinsServiceSecurityGroup04C2C3C9": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EcsJenkinsFargateStack/MyJenkinsService/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": "vpc-7bd9c41c"
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/Service/SecurityGroup/Resource"
      }
    },
    "MyJenkinsServiceSecurityGroupfromEcsJenkinsFargateStackMyJenkinsServiceLBSecurityGroupE47B2FE28080BBC614BC": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "MyJenkinsServiceSecurityGroup04C2C3C9",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MyJenkinsServiceLBSecurityGroup2558BA7F",
            "GroupId"
          ]
        },
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/MyJenkinsService/Service/SecurityGroup/from EcsJenkinsFargateStackMyJenkinsServiceLBSecurityGroupE47B2FE2:8080"
      }
    },
    "SourceCode290ABE62": {
      "Type": "AWS::CodeCommit::Repository",
      "Properties": {
        "RepositoryName": "mob-313-source-code",
        "Code": {
          "S3": {
            "Bucket": "reinvent2019-mob313",
            "Key": "application.zip"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/SourceCode/Resource"
      }
    },
    "SourceCodeEcsJenkinsFargateStackPipeline15F3DECEEventRule5C193CD9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.codecommit"
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "SourceCode290ABE62",
                "Arn"
              ]
            }
          ],
          "detail-type": [
            "CodeCommit Repository State Change"
          ],
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated"
            ],
            "referenceName": [
              "master"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":codepipeline:us-west-2:493833316326:",
                  {
                    "Ref": "PipelineC660917D"
                  }
                ]
              ]
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "PipelineEventsRole46BEEA7C",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/SourceCode/EcsJenkinsFargateStackPipeline15F3DECEEventRule/Resource"
      }
    },
    "CdkBuildRoleBE66F777": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/CdkBuild/Role/Resource"
      }
    },
    "CdkBuildRoleDefaultPolicyD27F0F5C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-west-2:493833316326:log-group:/aws/codebuild/",
                      {
                        "Ref": "CdkBuild455F642E"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-west-2:493833316326:log-group:/aws/codebuild/",
                      {
                        "Ref": "CdkBuild455F642E"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucket22248F97",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucket22248F97",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKey01D58D69",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKey01D58D69",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CdkBuildRoleDefaultPolicyD27F0F5C",
        "Roles": [
          {
            "Ref": "CdkBuildRoleBE66F777"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/CdkBuild/Role/DefaultPolicy/Resource"
      }
    },
    "CdkBuild455F642E": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:1.0",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CdkBuildRoleBE66F777",
            "Arn"
          ]
        },
        "Source": {
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "PipelineArtifactsBucketEncryptionKey01D58D69",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/CdkBuild/Resource"
      }
    },
    "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E": {
      "Type": "AWS::CodePipeline::CustomActionType",
      "Properties": {
        "Category": "Test",
        "InputArtifactDetails": {
          "MaximumCount": 5,
          "MinimumCount": 0
        },
        "OutputArtifactDetails": {
          "MaximumCount": 5,
          "MinimumCount": 0
        },
        "Provider": "Jenkins",
        "Version": "6",
        "ConfigurationProperties": [
          {
            "Key": true,
            "Name": "ProjectName",
            "Queryable": true,
            "Required": true,
            "Secret": false
          }
        ],
        "Settings": {
          "EntityUrlTemplate": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "MyJenkinsServiceLBFDD29EEF",
                    "DNSName"
                  ]
                },
                "/job/{Config:ProjectName}"
              ]
            ]
          },
          "ExecutionUrlTemplate": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "MyJenkinsServiceLBFDD29EEF",
                    "DNSName"
                  ]
                },
                "/job/{Config:ProjectName}/{ExternalExecutionId}"
              ]
            ]
          }
        }
      },
      "DependsOn": [
        "MyJenkinsServiceLBPublicListenerECSGroupB94EC70C",
        "MyJenkinsServiceLBPublicListener6610A6DC",
        "MyJenkinsServiceLBFDD29EEF",
        "MyJenkinsServiceLBSecurityGroup2558BA7F",
        "MyJenkinsServiceLBSecurityGrouptoEcsJenkinsFargateStackMyJenkinsServiceSecurityGroupB976CDCB8080D03DD439",
        "MyJenkinsServiceSecurityGroupfromEcsJenkinsFargateStackMyJenkinsServiceLBSecurityGroupE47B2FE28080BBC614BC",
        "MyJenkinsServiceSecurityGroup04C2C3C9",
        "MyJenkinsService47768937",
        "MyJenkinsServiceTaskDefExecutionRoleDefaultPolicy5B6069A7",
        "MyJenkinsServiceTaskDefExecutionRole65E76853",
        "MyJenkinsServiceTaskDefD591D293",
        "MyJenkinsServiceTaskDefTaskRoleB87E23B0",
        "MyJenkinsServiceTaskDefwebLogGroup50C29646"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/JenkinsProvider/JenkinsTestProviderResource/Resource"
      }
    },
    "PipelineArtifactsBucketEncryptionKey01D58D69": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::493833316326:root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "PipelineRoleD68726F7",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CdkBuildRoleBE66F777",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CdkBuildRoleBE66F777",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/ArtifactsBucketEncryptionKey/Resource"
      }
    },
    "PipelineArtifactsBucket22248F97": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucketEncryptionKey01D58D69",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/ArtifactsBucket/Resource"
      }
    },
    "PipelineArtifactsBucketEncryptionKeyAlias5C510EEE": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/codepipeline-ecsjenkinsfargatestackpipeline15f3dece",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "PipelineArtifactsBucketEncryptionKey01D58D69",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
      }
    },
    "PipelineRoleD68726F7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/Role/Resource"
      }
    },
    "PipelineRoleDefaultPolicyC7A05455": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucket22248F97",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucket22248F97",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKey01D58D69",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineBuildCodePipelineActionRoleD77A08E6",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineRoleDefaultPolicyC7A05455",
        "Roles": [
          {
            "Ref": "PipelineRoleD68726F7"
          }
        ]
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/Role/DefaultPolicy/Resource"
      }
    },
    "PipelineC660917D": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "PipelineRoleD68726F7",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1"
                },
                "Configuration": {
                  "RepositoryName": {
                    "Fn::GetAtt": [
                      "SourceCode290ABE62",
                      "Name"
                    ]
                  },
                  "BranchName": "master",
                  "PollForSourceChanges": false
                },
                "Name": "CodeCommit_Source",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_CodeCommit_Source"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "CdkBuild455F642E"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_CodeCommit_Source"
                  }
                ],
                "Name": "Build",
                "OutputArtifacts": [
                  {
                    "Name": "applicationAndTestBuildOutput"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "PipelineBuildCodePipelineActionRoleD77A08E6",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "Custom",
                  "Provider": "Jenkins",
                  "Version": "6"
                },
                "Configuration": {
                  "ProjectName": "AWSDeviceFarmAppiumTest"
                },
                "InputArtifacts": [
                  {
                    "Name": "applicationAndTestBuildOutput"
                  }
                ],
                "Name": "Test",
                "RunOrder": 1
              }
            ],
            "Name": "Test"
          }
        ],
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "PipelineArtifactsBucketEncryptionKey01D58D69",
                "Arn"
              ]
            },
            "Type": "KMS"
          },
          "Location": {
            "Ref": "PipelineArtifactsBucket22248F97"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E",
        "PipelineRoleDefaultPolicyC7A05455",
        "PipelineRoleD68726F7"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/Resource"
      }
    },
    "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::493833316326:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/Resource"
      }
    },
    "PipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyD20EE23A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucket22248F97",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucket22248F97",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKey01D58D69",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SourceCode290ABE62",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyD20EE23A",
        "Roles": [
          {
            "Ref": "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5"
          }
        ]
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "PipelineEventsRole46BEEA7C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/EventsRole/Resource"
      }
    },
    "PipelineEventsRoleDefaultPolicyFF4FCCE0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codepipeline:us-west-2:493833316326:",
                    {
                      "Ref": "PipelineC660917D"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineEventsRoleDefaultPolicyFF4FCCE0",
        "Roles": [
          {
            "Ref": "PipelineEventsRole46BEEA7C"
          }
        ]
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/EventsRole/DefaultPolicy/Resource"
      }
    },
    "PipelineBuildCodePipelineActionRoleD77A08E6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::493833316326:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/Build/Build/CodePipelineActionRole/Resource"
      }
    },
    "PipelineBuildCodePipelineActionRoleDefaultPolicyC9CB73F8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CdkBuild455F642E",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineBuildCodePipelineActionRoleDefaultPolicyC9CB73F8",
        "Roles": [
          {
            "Ref": "PipelineBuildCodePipelineActionRoleD77A08E6"
          }
        ]
      },
      "DependsOn": [
        "JenkinsProviderJenkinsTestProviderResourceF0CF8F0E"
      ],
      "Metadata": {
        "aws:cdk:path": "EcsJenkinsFargateStack/Pipeline/Build/Build/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    }
  },
  "Outputs": {
    "MyJenkinsServiceLoadBalancerDNSAED87F2A": {
      "Value": {
        "Fn::GetAtt": [
          "MyJenkinsServiceLBFDD29EEF",
          "DNSName"
        ]
      }
    },
    "MyJenkinsServiceServiceURL171F22C3": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "MyJenkinsServiceLBFDD29EEF",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  }
}